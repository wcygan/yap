syntax = "proto3";

import "google/protobuf/empty.proto";

package chat;

// ChatRoomService provides functionality for users to join chat rooms and receive messages.
service ChatRoomService {
  // JoinChatRoom allows a user to join a chat room.
  rpc JoinChatRoom (JoinChatRequest) returns (stream Packet) {}
}

// MessagingService provides functionality for sending messages within the chat system.
service MessagingService {
  // SendMessage sends a chat message to a specific channel.
  rpc SendMessage (ChatMessage) returns (google.protobuf.Empty) {}
}

// JoinChatRequest represents the request to join a chat room.
message JoinChatRequest {
  // The name of the user joining the chat room.
  string user_name = 1;

  // The unique identifier of the user joining the chat room.
  string user_id = 2;

  // The name of the channel the user wants to join.
  string channel_name = 3;
}

// Packet represents an update sent to the client.
message Packet {
  // The content of the packet.
  oneof Contents {
    // A chat message.
    ChatMessage message = 1;

    // A user joined message.
    UserJoinedMessage user_joined = 2;

    // A user left message.
    UserLeftMessage user_left = 3;
  }
}

// ChatMessage represents a message in the chat system.
message ChatMessage {
  // The content of the message.
  string message = 1;

  // A unique identifier for the message.
  string message_id = 2;

  // The unique identifier of the channel where the message is sent.
  string channel_id = 3;

  // The unique identifier of the user who sent the message.
  string user_id = 4;

  // The name of the user who sent the message.
  string user_name = 5;

  // The timestamp when the message was sent, in milliseconds since epoch.
  int64 timestamp = 6;
}

// UserJoinedMessage is a message that indicates a user has joined a channel.
message UserJoinedMessage {
  // The unique identifier of the channel where the user joined.
  string channel_id = 1;

  // The unique identifier of the user who joined.
  string user_id = 2;

  // The name of the user who joined.
  string user_name = 3;

  // The timestamp when the user joined, in milliseconds since epoch.
  int64 timestamp = 4;
}

message UserLeftMessage {
  // The unique identifier of the channel where the user left.
  string channel_id = 1;

  // The unique identifier of the user who left.
  string user_id = 2;

  // The name of the user who left.
  string user_name = 3;

  // The timestamp when the user left, in milliseconds since epoch.
  int64 timestamp = 4;
}